<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark SkinnableContainer container.  

     @see spark.components.SkinnableContainer
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled="0.5" contentBackgroundColor.normal="#9D3737">

    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.SkinnableContainer")]
    ]]>
    </fx:Metadata> 
    
    <fx:Script fb:purpose="styling">
        <![CDATA[         
            /**
             *  @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void {
				var g:Graphics = this.graphics;
				g.clear()
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				g.lineStyle(1, 0xE6E6E6, 0.5);
				var squareSize:Number = 15;
				var numRows:Number = unscaledHeight / squareSize;
				var numCols:Number = unscaledWidth / squareSize;
				for(var row:Number = 0; row< numRows; row++) {
					g.moveTo(0, row * squareSize);
					g.lineTo(unscaledWidth, row * squareSize); 
				}
				for(var col:Number = 0; col< numCols; col++) {
					g.moveTo(col * squareSize, 0);
					g.lineTo(col * squareSize, unscaledHeight); 
				}
            }
        ]]>        
    </fx:Script>
    
    <s:states>
        <s:State name="normal" />
        <s:State name="disabled" />
    </s:states>
    
    <!--- Defines the appearance of the SkinnableContainer class's background. -->
    <s:Rect id="background" left="0" right="0" top="0" bottom="0">
    </s:Rect>
    
    <!--
        Note: setting the minimum size to 0 here so that changes to the host component's
        size will not be thwarted by this skin part's minimum size.   This is a compromise,
        more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
    -->
    <!--- @copy spark.components.SkinnableContainer#contentGroup -->
	<s:Scroller width="100%" height="100%">
	    <s:Group id="contentGroup" left="0" right="0" top="0" bottom="0" minWidth="0" minHeight="0">
	        <s:layout>
	            <s:BasicLayout/>
	        </s:layout>
	    </s:Group>
	</s:Scroller>
</s:Skin>
