<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="440" height="320"
		 creationComplete="init()">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import com.starflow.components.ActImage;
			import com.starflow.core.support.ValidateProcessDefine;
			import com.starflow.core.support.WindowManager;
			import com.starflow.core.util.Flow;
			import com.starflow.model.FinishActivity;
			
			private static var instance:FinishActWin = new FinishActWin;
			private var activity:FinishActivity;
			private static var act:ActImage;
			
			public static function show():void {
				WindowManager.show(instance);
				instance.activity = Flow.rcAct.activity as FinishActivity;
				instance.tabNavigatorID.selectedIndex=0;
				
				instance.actId.text = Flow.rcAct.id;
				instance.actName.text = Flow.rcAct.text;
				instance.description.text = Flow.rcAct.activity.description;
				
				if(instance.activity.joinMode == "OR")
					instance.joinOR.selected = true;
				else if(instance.activity.joinMode == "AND")
					instance.joinAND.selected = true;
				else
					instance.joinXOR.selected = true;
						
				//------------------------------启动策略-------------------------------
				instance.startStrategybyAppActionID.text = "";
				if(instance.activity.activateRuleType == "directRunning") {
					instance.directRunningID.selected = true;
					instance.waitingActivitionID.selected = false;
					instance.startStrategybyAppID.selected = false;
					instance.startStrategybyAppActionID.enabled = false;
				} else if(instance.activity.activateRuleType == "waitingActivition") {
					instance.directRunningID.selected = false;
					instance.waitingActivitionID.selected = true;
					instance.startStrategybyAppID.selected = false;
					instance.startStrategybyAppActionID.enabled = false;
				} else if(instance.activity.activateRuleType == "startStrategybyApp") {
					instance.directRunningID.selected = false;
					instance.waitingActivitionID.selected = false;
					instance.startStrategybyAppID.selected = true;
					instance.startStrategybyAppActionID.enabled = true;
					instance.startStrategybyAppActionID.text = instance.activity.startStrategybyAppAction;
				}
			}
			
			public function save(event:MouseEvent):void {
				WindowManager.hide(instance);
				
				Flow.rcAct.id = instance.actId.text;
				Flow.rcAct.text = instance.actName.text;
				Flow.rcAct.activity.description = instance.description.text;
				
				if(joinOR.selected)
					activity.joinMode = "OR";
				else if(joinAND.selected)
					activity.joinMode = "AND";
				else
					activity.joinMode = "XOR";
				
				//------------------------------启动策略-------------------------------
				if(directRunningID.selected)
					activity.activateRuleType = "directRunning";
				else if(waitingActivitionID.selected)
					activity.activateRuleType = "waitingActivition";
				else if(startStrategybyAppID.selected) {
					activity.activateRuleType = "startStrategybyApp";
					activity.startStrategybyAppAction = startStrategybyAppActionID.text;
				}
				
				ValidateProcessDefine.checkStart(Flow.rcAct);
			}
			
			public function hide(event:MouseEvent):void {
				WindowManager.hide(instance);
			}
			
			public function init():void {
				this.addEventListener(KeyboardEvent.KEY_DOWN, keyDownHandle);
			}
			
			public function keyDownHandle(event:KeyboardEvent):void {
				if (event.charCode == Keyboard.ESCAPE) {
					hide(null);
				} else if(event.charCode == Keyboard.ENTER) {
					save(null);
				}
			}
			
			protected function activateRule_changeHandler(event:Event):void {
				var radio:RadioButton = event.target as RadioButton;
				if((startStrategybyAppID.selected && radio.id == "startStrategybyAppID")) { //流程启动者 or 相关数据区
					startStrategybyAppActionID.enabled = true;
				} else {
					startStrategybyAppActionID.enabled = false;
				}
			}
		]]>
	</fx:Script>
	
	<s:Panel title="结束环节属性" width="100%" height="100%" backgroundColor="#D6E4E7">
		<mx:TabNavigator id="tabNavigatorID" width = '100%' height = '100%' backgroundColor="#D6E4E7" borderVisible="false" bottom="14" x="0" creationPolicy="all">
			<mx:VBox label = '基本属性'>
				<mx:Form width="100%" height="100%">
					<mx:FormItem label="环节ID" width="100%">
						<s:TextInput width="100%" id="actId" enabled="false"/>
					</mx:FormItem>
					<mx:FormItem label="环节名称" width="100%">
						<s:TextInput width="100%" id="actName"/>
					</mx:FormItem>
					<mx:FormItem label="聚合模式" width="100%">
						<s:HGroup>
							<s:RadioButton label="单一聚合" id="joinXOR"/>
							<s:RadioButton label="多路聚合" id="joinOR"/>
							<s:RadioButton label="全部聚合" id="joinAND"/>
						</s:HGroup>
					</mx:FormItem>
					<mx:FormItem label="描述" width="100%">
						<s:TextArea height="100" width="100%" id="description"/>
					</mx:FormItem>
				</mx:Form>
			</mx:VBox>
			
			<mx:VBox label = '启动策略'>
				<mx:Form width="100%" height="100%">
					<mx:FormItem label="启动规则">
						<s:VGroup>
							<s:RadioButton groupName="activateRule1" label="直接运行" id="directRunningID" selected="true" change="activateRule_changeHandler(event)"/>
							<s:RadioButton groupName="activateRule1" label="待激活" id="waitingActivitionID" change="activateRule_changeHandler(event)"/>
							<s:HGroup>
								<s:RadioButton groupName="activateRule1" label="由规则逻辑返回值确定" id="startStrategybyAppID" change="activateRule_changeHandler(event)"/>
								<s:TextInput width="177" id="startStrategybyAppActionID" enabled="false"/>
							</s:HGroup>
						</s:VGroup>
					</mx:FormItem>
				</mx:Form>
			</mx:VBox>
		</mx:TabNavigator>
		<s:Button y="168" label="确定" click="save(event)" horizontalCenter="-50" bottom="8"/>
		<s:Button y="168" label="取消" click="hide(event)" horizontalCenter="50" bottom="8"/>
	</s:Panel>
</s:Group>
