<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="600" height="400"
		 creationComplete="init()">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import com.starflow.components.ActImage;
			import com.starflow.core.support.ValidateProcessDefine;
			import com.starflow.core.support.WindowManager;
			import com.starflow.core.util.Flow;
			import com.starflow.model.Operation;
			import com.starflow.model.StartActivity;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			
			private static var instance:StartActWin = new StartActWin;
			private var activity:StartActivity;
			private static var act:ActImage;
			
			/* 查询页面模板回调函数 */
			private static function resultPGHandler(event:ResultEvent):void {
				var result:XML = XML(event.result);  
				var nodes:XMLList = result..node;
				var node:XML = null;  
				Flow.pageTemplates = new ArrayCollection();
				Flow.pageTemplates.addItem({name:"请选择...", id:""});
				for each (node in nodes) {
					var obj:Object = new Object();
					obj.id = node.@id;
					obj.name = node.@name;
					Flow.pageTemplates.addItem(obj);
				}
				//instance.pageTemplateCombox.dataProvider = Flow.pageTemplates;
				//instance.pageTemplateCombox.selectedIndex=0;
			}
			
			public static function show():void {
				WindowManager.show(instance);
				instance.activity = Flow.rcAct.activity as StartActivity;
				instance.tabNavigatorID.selectedIndex=0;
				
				instance.actId.text = Flow.rcAct.id;
				instance.actName.text = Flow.rcAct.text;
				instance.description.text = Flow.rcAct.activity.description;
				
				if(instance.activity.splitMode == "OR")
					instance.splitOR.selected = true;
				else if(instance.activity.splitMode == "AND")
					instance.splitAND.selected = true;
				else
					instance.splitXOR.selected = true;
						
				//------------------------------环节操作-------------------------------
				//获取流程对应业务类型的业务模板信息。并缓存，避免重复获取。
				if(Flow.pageTemplates == null) {
					var httpService:HTTPService = new HTTPService();
					httpService.addEventListener(ResultEvent.RESULT, resultPGHandler);
					httpService.resultFormat = "xml";
					var flashvars:Object = FlexGlobals.topLevelApplication.parameters;
					httpService.url = flashvars.queryPageTemplateUrl;
					httpService.method = "POST";
					var params:URLVariables = new URLVariables(); 
					params.busiId = flashvars.busiId;
					httpService.send(params);
				} else {
					//instance.pageTemplateCombox.dataProvider = Flow.pageTemplates;
					var _action:String = instance.activity.action;
					if(_action != "") {
						var len1:int = Flow.pageTemplates.length;
						for(var i1:int=0; i1<len1; i1++) {
							if(Flow.pageTemplates.getItemAt(i1).id == _action) {
								//instance.pageTemplateCombox.selectedIndex = i1;
								break;
							}
						}
					} else
						;
						//instance.pageTemplateCombox.selectedIndex=0;
				}
				
				//instance.operationGrid.dataProvider = instance.activity.operations;
			}
			
			public function save(event:MouseEvent):void {
				WindowManager.hide(instance);
				
				Flow.rcAct.id = instance.actId.text;
				Flow.rcAct.text = instance.actName.text;
				Flow.rcAct.activity.description = instance.description.text;
				
				if(splitOR.selected)
					activity.splitMode = "OR";
				else if(splitAND.selected)
					activity.splitMode = "AND";
				else
					activity.splitMode = "XOR";
				
				//------------------------------环节操作-------------------------------
				//activity.action = pageTemplateCombox.selectedItem.id;
				
				ValidateProcessDefine.checkStart(Flow.rcAct);
			}
			
			public function hide(event:MouseEvent):void {
				WindowManager.hide(instance);
			}
			
			public function init():void {
				this.addEventListener(KeyboardEvent.KEY_DOWN, keyDownHandle);
			}
			
			public function keyDownHandle(event:KeyboardEvent):void {
				if (event.charCode == Keyboard.ESCAPE) {
					hide(null);
				} else if(event.charCode == Keyboard.ENTER) {
					save(null);
				}
			}
			
			protected function deleteOperation_clickHandler(event:MouseEvent):void {
			/* 	var selectOperation:Operation = operationGrid.selectedItem as Operation;
				var len:int = activity.operations.length;
				var operations:ArrayCollection = new ArrayCollection();
				for(var i:int=0; i<len; i++) {
					var operation:Operation = activity.operations.getItemAt(i) as Operation;
					if(operation.id != selectOperation.id) {
						operations.addItem(operation);
					}
				}
				activity.operations = operations;
				operationGrid.dataProvider = activity.operations; */
			}
		]]>
	</fx:Script>
	
	<s:Panel title="开始环节属性" width="100%" height="100%" backgroundColor="#D6E4E7">
		<mx:TabNavigator id="tabNavigatorID" width = '100%' height = '100%' backgroundColor="#D6E4E7" borderVisible="false" bottom="14" x="0" creationPolicy="all">
			<mx:VBox label = '基本属性'>
				<mx:Form width="100%" height="100%">
					<mx:FormItem label="环节ID" width="100%">
						<s:TextInput width="100%" id="actId" enabled="false"/>
					</mx:FormItem>
					<mx:FormItem label="环节名称" width="100%">
						<s:TextInput width="100%" id="actName"/>
					</mx:FormItem>
					<mx:FormItem label="分支模式" width="100%">
						<s:HGroup>
							<s:RadioButton label="单一分支" id="splitXOR"/>
							<s:RadioButton label="多路分支" id="splitOR"/>
							<s:RadioButton label="全部分支" id="splitAND"/>
						</s:HGroup>
					</mx:FormItem>
					<mx:FormItem label="描述" width="100%">
						<s:TextArea height="100" width="100%" id="description"/>
					</mx:FormItem>
				</mx:Form>
			</mx:VBox>
			<!--
			<mx:VBox label = '环节操作'>
				<mx:Form width="100%" height="100%">
					<mx:FormItem label="页面模板" width="90%" required="false">
						<s:DropDownList width="462" id="pageTemplateCombox" labelField="name"/>
					</mx:FormItem>
					<mx:FormItem label="环节操作" width="100%">
						<s:HGroup width="100%">							
							<mx:DataGrid  id="operationGrid" rowCount="10" width="386">
								<mx:columns>
									<mx:DataGridColumn headerText="ID" dataField="id" width="40"/>
									<mx:DataGridColumn headerText="编码" dataField="code" width="50"/>
									<mx:DataGridColumn headerText="显示名称" dataField="displayName" width="85"/>
									<mx:DataGridColumn headerText="操作名称" dataField="name"/>
								</mx:columns>
							</mx:DataGrid>
							<s:VGroup>
								<s:Button label="添加" click="OperationWin.show();" />
								<s:Button label="删除" click="deleteOperation_clickHandler(event)"/>
							</s:VGroup>
						</s:HGroup>
					</mx:FormItem>
					
				</mx:Form>
			</mx:VBox>
			-->
		</mx:TabNavigator>
		<s:Button y="168" label="确定" click="save(event)" horizontalCenter="-50" bottom="8"/>
		<s:Button y="168" label="取消" click="hide(event)" horizontalCenter="50" bottom="8"/>
	</s:Panel>
</s:Group>
